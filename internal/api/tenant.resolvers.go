package api

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"

	"entgo.io/contrib/entgql"
	"go.infratographer.com/example-api/internal/ent/generated"
	"go.infratographer.com/example-api/internal/ent/generated/todo"
	"go.infratographer.com/x/gidx"
)

// Todo is the resolver for the todo field.
func (r *tenantResolver) Todo(ctx context.Context, obj *Tenant, after *entgql.Cursor[gidx.PrefixedID], first *int, before *entgql.Cursor[gidx.PrefixedID], last *int, orderBy *generated.TodoOrder, where *generated.TodoWhereInput) (*generated.TodoConnection, error) {
	return r.client.Todo.Query().
		Where(
			todo.TenantID(obj.ID),
		).Paginate(
		ctx,
		after,
		first,
		before,
		last,
		generated.WithTodoOrder(orderBy),
		generated.WithTodoFilter(where.Filter),
	)
}

// Tenant is the resolver for the tenant field.
func (r *todoResolver) Tenant(ctx context.Context, obj *generated.Todo) (*Tenant, error) {
	return &Tenant{ID: obj.TenantID}, nil
}

// Tenant returns TenantResolver implementation.
func (r *Resolver) Tenant() TenantResolver { return &tenantResolver{r} }

type tenantResolver struct{ *Resolver }
