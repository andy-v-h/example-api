package api

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"

	"go.infratographer.com/example-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// TodoCreate is the resolver for the todoCreate field.
func (r *mutationResolver) TodoCreate(ctx context.Context, input generated.CreateTodoInput) (*TodoCreatePayload, error) {
	t, err := r.client.Todo.Create().SetInput(input).Save(ctx)
	if err != nil {
		return nil, err
	}

	return &TodoCreatePayload{Todo: t}, err
}

// TodoUpdate is the resolver for the todoUpdate field.
func (r *mutationResolver) TodoUpdate(ctx context.Context, id gidx.PrefixedID, input generated.UpdateTodoInput) (*TodoUpdatePayload, error) {
	t, err := r.client.Todo.Get(ctx, id)
	if err != nil {
		return nil, err
	}

	t, err = t.Update().SetInput(input).Save(ctx)
	if err != nil {
		return nil, err
	}

	return &TodoUpdatePayload{Todo: t}, err
}

// TodoDelete is the resolver for the todoDelete field.
func (r *mutationResolver) TodoDelete(ctx context.Context, id gidx.PrefixedID) (*TodoDeletePayload, error) {
	if err := r.client.Todo.DeleteOneID(id).Exec(ctx); err != nil {
		return nil, err
	}

	return &TodoDeletePayload{DeletedID: id}, nil
}

// Todo is the resolver for the todo field.
func (r *queryResolver) Todo(ctx context.Context, id gidx.PrefixedID) (*generated.Todo, error) {
	return r.client.Todo.Get(ctx, id)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
