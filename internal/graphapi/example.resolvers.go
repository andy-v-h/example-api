package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"

	"go.infratographer.com/example-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// CreateExample is the resolver for the createExample field.
func (r *mutationResolver) CreateExample(ctx context.Context, input generated.CreateExampleInput) (*ExampleCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateExample - createExample"))
}

// UpdateExample is the resolver for the updateExample field.
func (r *mutationResolver) UpdateExample(ctx context.Context, id gidx.PrefixedID, input generated.UpdateExampleInput) (*ExampleUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateExample - updateExample"))
}

// DeleteExample is the resolver for the deleteExample field.
func (r *mutationResolver) DeleteExample(ctx context.Context, id gidx.PrefixedID) (*ExampleDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteExample - deleteExample"))
}

// Example is the resolver for the example field.
func (r *queryResolver) Example(ctx context.Context, id gidx.PrefixedID) (*generated.Example, error) {
	panic(fmt.Errorf("not implemented: Example - example"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
