package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"

	"entgo.io/contrib/entgql"
	"go.infratographer.com/example-api/internal/ent/generated"
	"go.infratographer.com/x/gidx"
)

// Tenant is the resolver for the tenant field.
func (r *exampleResolver) Tenant(ctx context.Context, obj *generated.Example) (*Tenant, error) {
	panic(fmt.Errorf("not implemented: Tenant - tenant"))
}

// Examples is the resolver for the examples field.
func (r *tenantResolver) Examples(ctx context.Context, obj *Tenant, after *entgql.Cursor[gidx.PrefixedID], first *int, before *entgql.Cursor[gidx.PrefixedID], last *int, orderBy *generated.ExampleOrder, where *generated.ExampleWhereInput) (*generated.ExampleConnection, error) {
	panic(fmt.Errorf("not implemented: Examples - examples"))
}

// Tenant returns TenantResolver implementation.
func (r *Resolver) Tenant() TenantResolver { return &tenantResolver{r} }

type tenantResolver struct{ *Resolver }
